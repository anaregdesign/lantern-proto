// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: graph/v1/graph.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Optimization int32

const (
	Optimization_OPTIMIZATION_UNSPECIFIED                Optimization = 0
	Optimization_OPTIMIZATION_MINIMUM_SPANNING_TREE      Optimization = 1
	Optimization_OPTIMIZATION_MAXIMUM_SPANNING_TREE      Optimization = 2
	Optimization_OPTIMIZATION_SHORTEST_PATH_TREE         Optimization = 3
	Optimization_OPTIMIZATION_SHORTEST_PATH_TREE_INVERSE Optimization = 4
)

// Enum value maps for Optimization.
var (
	Optimization_name = map[int32]string{
		0: "OPTIMIZATION_UNSPECIFIED",
		1: "OPTIMIZATION_MINIMUM_SPANNING_TREE",
		2: "OPTIMIZATION_MAXIMUM_SPANNING_TREE",
		3: "OPTIMIZATION_SHORTEST_PATH_TREE",
		4: "OPTIMIZATION_SHORTEST_PATH_TREE_INVERSE",
	}
	Optimization_value = map[string]int32{
		"OPTIMIZATION_UNSPECIFIED":                0,
		"OPTIMIZATION_MINIMUM_SPANNING_TREE":      1,
		"OPTIMIZATION_MAXIMUM_SPANNING_TREE":      2,
		"OPTIMIZATION_SHORTEST_PATH_TREE":         3,
		"OPTIMIZATION_SHORTEST_PATH_TREE_INVERSE": 4,
	}
)

func (x Optimization) Enum() *Optimization {
	p := new(Optimization)
	*p = x
	return p
}

func (x Optimization) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Optimization) Descriptor() protoreflect.EnumDescriptor {
	return file_graph_v1_graph_proto_enumTypes[0].Descriptor()
}

func (Optimization) Type() protoreflect.EnumType {
	return &file_graph_v1_graph_proto_enumTypes[0]
}

func (x Optimization) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Optimization.Descriptor instead.
func (Optimization) EnumDescriptor() ([]byte, []int) {
	return file_graph_v1_graph_proto_rawDescGZIP(), []int{0}
}

type Status int32

const (
	Status_STATUS_UNSPECIFIED           Status = 0
	Status_STATUS_OK                    Status = 1
	Status_STATUS_INTERNAL_SERVER_ERROR Status = 2
	Status_STATUS_INVALID_REQUEST       Status = 3
)

// Enum value maps for Status.
var (
	Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "STATUS_OK",
		2: "STATUS_INTERNAL_SERVER_ERROR",
		3: "STATUS_INVALID_REQUEST",
	}
	Status_value = map[string]int32{
		"STATUS_UNSPECIFIED":           0,
		"STATUS_OK":                    1,
		"STATUS_INTERNAL_SERVER_ERROR": 2,
		"STATUS_INVALID_REQUEST":       3,
	}
)

func (x Status) Enum() *Status {
	p := new(Status)
	*p = x
	return p
}

func (x Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Status) Descriptor() protoreflect.EnumDescriptor {
	return file_graph_v1_graph_proto_enumTypes[1].Descriptor()
}

func (Status) Type() protoreflect.EnumType {
	return &file_graph_v1_graph_proto_enumTypes[1]
}

func (x Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Status.Descriptor instead.
func (Status) EnumDescriptor() ([]byte, []int) {
	return file_graph_v1_graph_proto_rawDescGZIP(), []int{1}
}

type Vertex struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key        string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Expiration *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=expiration,proto3" json:"expiration,omitempty"`
	// Types that are assignable to Value:
	//
	//	*Vertex_Float64
	//	*Vertex_Float32
	//	*Vertex_Int32
	//	*Vertex_Int64
	//	*Vertex_Uint32
	//	*Vertex_Uint64
	//	*Vertex_Bool
	//	*Vertex_String_
	//	*Vertex_Bytes
	//	*Vertex_Timestamp
	//	*Vertex_Nil
	Value isVertex_Value `protobuf_oneof:"value"`
}

func (x *Vertex) Reset() {
	*x = Vertex{}
	if protoimpl.UnsafeEnabled {
		mi := &file_graph_v1_graph_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vertex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vertex) ProtoMessage() {}

func (x *Vertex) ProtoReflect() protoreflect.Message {
	mi := &file_graph_v1_graph_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vertex.ProtoReflect.Descriptor instead.
func (*Vertex) Descriptor() ([]byte, []int) {
	return file_graph_v1_graph_proto_rawDescGZIP(), []int{0}
}

func (x *Vertex) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Vertex) GetExpiration() *timestamppb.Timestamp {
	if x != nil {
		return x.Expiration
	}
	return nil
}

func (m *Vertex) GetValue() isVertex_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *Vertex) GetFloat64() float64 {
	if x, ok := x.GetValue().(*Vertex_Float64); ok {
		return x.Float64
	}
	return 0
}

func (x *Vertex) GetFloat32() float32 {
	if x, ok := x.GetValue().(*Vertex_Float32); ok {
		return x.Float32
	}
	return 0
}

func (x *Vertex) GetInt32() int32 {
	if x, ok := x.GetValue().(*Vertex_Int32); ok {
		return x.Int32
	}
	return 0
}

func (x *Vertex) GetInt64() int64 {
	if x, ok := x.GetValue().(*Vertex_Int64); ok {
		return x.Int64
	}
	return 0
}

func (x *Vertex) GetUint32() uint32 {
	if x, ok := x.GetValue().(*Vertex_Uint32); ok {
		return x.Uint32
	}
	return 0
}

func (x *Vertex) GetUint64() uint64 {
	if x, ok := x.GetValue().(*Vertex_Uint64); ok {
		return x.Uint64
	}
	return 0
}

func (x *Vertex) GetBool() bool {
	if x, ok := x.GetValue().(*Vertex_Bool); ok {
		return x.Bool
	}
	return false
}

func (x *Vertex) GetString_() string {
	if x, ok := x.GetValue().(*Vertex_String_); ok {
		return x.String_
	}
	return ""
}

func (x *Vertex) GetBytes() []byte {
	if x, ok := x.GetValue().(*Vertex_Bytes); ok {
		return x.Bytes
	}
	return nil
}

func (x *Vertex) GetTimestamp() *timestamppb.Timestamp {
	if x, ok := x.GetValue().(*Vertex_Timestamp); ok {
		return x.Timestamp
	}
	return nil
}

func (x *Vertex) GetNil() bool {
	if x, ok := x.GetValue().(*Vertex_Nil); ok {
		return x.Nil
	}
	return false
}

type isVertex_Value interface {
	isVertex_Value()
}

type Vertex_Float64 struct {
	Float64 float64 `protobuf:"fixed64,10,opt,name=float64,proto3,oneof"`
}

type Vertex_Float32 struct {
	Float32 float32 `protobuf:"fixed32,11,opt,name=float32,proto3,oneof"`
}

type Vertex_Int32 struct {
	Int32 int32 `protobuf:"varint,12,opt,name=int32,proto3,oneof"`
}

type Vertex_Int64 struct {
	Int64 int64 `protobuf:"varint,13,opt,name=int64,proto3,oneof"`
}

type Vertex_Uint32 struct {
	Uint32 uint32 `protobuf:"varint,14,opt,name=uint32,proto3,oneof"`
}

type Vertex_Uint64 struct {
	Uint64 uint64 `protobuf:"varint,15,opt,name=uint64,proto3,oneof"`
}

type Vertex_Bool struct {
	Bool bool `protobuf:"varint,16,opt,name=bool,proto3,oneof"`
}

type Vertex_String_ struct {
	String_ string `protobuf:"bytes,17,opt,name=string,proto3,oneof"`
}

type Vertex_Bytes struct {
	Bytes []byte `protobuf:"bytes,18,opt,name=bytes,proto3,oneof"`
}

type Vertex_Timestamp struct {
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,19,opt,name=timestamp,proto3,oneof"`
}

type Vertex_Nil struct {
	Nil bool `protobuf:"varint,30,opt,name=nil,proto3,oneof"`
}

func (*Vertex_Float64) isVertex_Value() {}

func (*Vertex_Float32) isVertex_Value() {}

func (*Vertex_Int32) isVertex_Value() {}

func (*Vertex_Int64) isVertex_Value() {}

func (*Vertex_Uint32) isVertex_Value() {}

func (*Vertex_Uint64) isVertex_Value() {}

func (*Vertex_Bool) isVertex_Value() {}

func (*Vertex_String_) isVertex_Value() {}

func (*Vertex_Bytes) isVertex_Value() {}

func (*Vertex_Timestamp) isVertex_Value() {}

func (*Vertex_Nil) isVertex_Value() {}

type Edge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tail       string                 `protobuf:"bytes,1,opt,name=tail,proto3" json:"tail,omitempty"`
	Head       string                 `protobuf:"bytes,2,opt,name=head,proto3" json:"head,omitempty"`
	Weight     float32                `protobuf:"fixed32,3,opt,name=weight,proto3" json:"weight,omitempty"`
	Expiration *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=expiration,proto3" json:"expiration,omitempty"`
}

func (x *Edge) Reset() {
	*x = Edge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_graph_v1_graph_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Edge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Edge) ProtoMessage() {}

func (x *Edge) ProtoReflect() protoreflect.Message {
	mi := &file_graph_v1_graph_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Edge.ProtoReflect.Descriptor instead.
func (*Edge) Descriptor() ([]byte, []int) {
	return file_graph_v1_graph_proto_rawDescGZIP(), []int{1}
}

func (x *Edge) GetTail() string {
	if x != nil {
		return x.Tail
	}
	return ""
}

func (x *Edge) GetHead() string {
	if x != nil {
		return x.Head
	}
	return ""
}

func (x *Edge) GetWeight() float32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *Edge) GetExpiration() *timestamppb.Timestamp {
	if x != nil {
		return x.Expiration
	}
	return nil
}

type Graph struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vertices []*Vertex `protobuf:"bytes,1,rep,name=vertices,proto3" json:"vertices,omitempty"`
	Edges    []*Edge   `protobuf:"bytes,2,rep,name=edges,proto3" json:"edges,omitempty"`
}

func (x *Graph) Reset() {
	*x = Graph{}
	if protoimpl.UnsafeEnabled {
		mi := &file_graph_v1_graph_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Graph) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Graph) ProtoMessage() {}

func (x *Graph) ProtoReflect() protoreflect.Message {
	mi := &file_graph_v1_graph_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Graph.ProtoReflect.Descriptor instead.
func (*Graph) Descriptor() ([]byte, []int) {
	return file_graph_v1_graph_proto_rawDescGZIP(), []int{2}
}

func (x *Graph) GetVertices() []*Vertex {
	if x != nil {
		return x.Vertices
	}
	return nil
}

func (x *Graph) GetEdges() []*Edge {
	if x != nil {
		return x.Edges
	}
	return nil
}

type IlluminateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seed         string       `protobuf:"bytes,1,opt,name=seed,proto3" json:"seed,omitempty"`
	Step         uint32       `protobuf:"varint,2,opt,name=step,proto3" json:"step,omitempty"`
	K            uint32       `protobuf:"varint,3,opt,name=k,proto3" json:"k,omitempty"`
	Tfidf        bool         `protobuf:"varint,4,opt,name=tfidf,proto3" json:"tfidf,omitempty"`
	Optimization Optimization `protobuf:"varint,5,opt,name=optimization,proto3,enum=graph.v1.Optimization" json:"optimization,omitempty"`
}

func (x *IlluminateRequest) Reset() {
	*x = IlluminateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_graph_v1_graph_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IlluminateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IlluminateRequest) ProtoMessage() {}

func (x *IlluminateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_graph_v1_graph_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IlluminateRequest.ProtoReflect.Descriptor instead.
func (*IlluminateRequest) Descriptor() ([]byte, []int) {
	return file_graph_v1_graph_proto_rawDescGZIP(), []int{3}
}

func (x *IlluminateRequest) GetSeed() string {
	if x != nil {
		return x.Seed
	}
	return ""
}

func (x *IlluminateRequest) GetStep() uint32 {
	if x != nil {
		return x.Step
	}
	return 0
}

func (x *IlluminateRequest) GetK() uint32 {
	if x != nil {
		return x.K
	}
	return 0
}

func (x *IlluminateRequest) GetTfidf() bool {
	if x != nil {
		return x.Tfidf
	}
	return false
}

func (x *IlluminateRequest) GetOptimization() Optimization {
	if x != nil {
		return x.Optimization
	}
	return Optimization_OPTIMIZATION_UNSPECIFIED
}

type IlluminateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Graph  *Graph `protobuf:"bytes,1,opt,name=graph,proto3" json:"graph,omitempty"`
	Status Status `protobuf:"varint,2,opt,name=status,proto3,enum=graph.v1.Status" json:"status,omitempty"`
}

func (x *IlluminateResponse) Reset() {
	*x = IlluminateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_graph_v1_graph_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IlluminateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IlluminateResponse) ProtoMessage() {}

func (x *IlluminateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_graph_v1_graph_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IlluminateResponse.ProtoReflect.Descriptor instead.
func (*IlluminateResponse) Descriptor() ([]byte, []int) {
	return file_graph_v1_graph_proto_rawDescGZIP(), []int{4}
}

func (x *IlluminateResponse) GetGraph() *Graph {
	if x != nil {
		return x.Graph
	}
	return nil
}

func (x *IlluminateResponse) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_STATUS_UNSPECIFIED
}

type GetVertexRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *GetVertexRequest) Reset() {
	*x = GetVertexRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_graph_v1_graph_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVertexRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVertexRequest) ProtoMessage() {}

func (x *GetVertexRequest) ProtoReflect() protoreflect.Message {
	mi := &file_graph_v1_graph_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVertexRequest.ProtoReflect.Descriptor instead.
func (*GetVertexRequest) Descriptor() ([]byte, []int) {
	return file_graph_v1_graph_proto_rawDescGZIP(), []int{5}
}

func (x *GetVertexRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type GetVertexResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vertex *Vertex `protobuf:"bytes,1,opt,name=vertex,proto3" json:"vertex,omitempty"`
}

func (x *GetVertexResponse) Reset() {
	*x = GetVertexResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_graph_v1_graph_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVertexResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVertexResponse) ProtoMessage() {}

func (x *GetVertexResponse) ProtoReflect() protoreflect.Message {
	mi := &file_graph_v1_graph_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVertexResponse.ProtoReflect.Descriptor instead.
func (*GetVertexResponse) Descriptor() ([]byte, []int) {
	return file_graph_v1_graph_proto_rawDescGZIP(), []int{6}
}

func (x *GetVertexResponse) GetVertex() *Vertex {
	if x != nil {
		return x.Vertex
	}
	return nil
}

type PutVertexRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vertices []*Vertex `protobuf:"bytes,1,rep,name=vertices,proto3" json:"vertices,omitempty"`
}

func (x *PutVertexRequest) Reset() {
	*x = PutVertexRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_graph_v1_graph_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutVertexRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutVertexRequest) ProtoMessage() {}

func (x *PutVertexRequest) ProtoReflect() protoreflect.Message {
	mi := &file_graph_v1_graph_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutVertexRequest.ProtoReflect.Descriptor instead.
func (*PutVertexRequest) Descriptor() ([]byte, []int) {
	return file_graph_v1_graph_proto_rawDescGZIP(), []int{7}
}

func (x *PutVertexRequest) GetVertices() []*Vertex {
	if x != nil {
		return x.Vertices
	}
	return nil
}

type PutVertexResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status Status `protobuf:"varint,1,opt,name=status,proto3,enum=graph.v1.Status" json:"status,omitempty"`
}

func (x *PutVertexResponse) Reset() {
	*x = PutVertexResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_graph_v1_graph_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutVertexResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutVertexResponse) ProtoMessage() {}

func (x *PutVertexResponse) ProtoReflect() protoreflect.Message {
	mi := &file_graph_v1_graph_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutVertexResponse.ProtoReflect.Descriptor instead.
func (*PutVertexResponse) Descriptor() ([]byte, []int) {
	return file_graph_v1_graph_proto_rawDescGZIP(), []int{8}
}

func (x *PutVertexResponse) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_STATUS_UNSPECIFIED
}

type DeleteVertexRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *DeleteVertexRequest) Reset() {
	*x = DeleteVertexRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_graph_v1_graph_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteVertexRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteVertexRequest) ProtoMessage() {}

func (x *DeleteVertexRequest) ProtoReflect() protoreflect.Message {
	mi := &file_graph_v1_graph_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteVertexRequest.ProtoReflect.Descriptor instead.
func (*DeleteVertexRequest) Descriptor() ([]byte, []int) {
	return file_graph_v1_graph_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteVertexRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type DeleteVertexResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status Status `protobuf:"varint,1,opt,name=status,proto3,enum=graph.v1.Status" json:"status,omitempty"`
}

func (x *DeleteVertexResponse) Reset() {
	*x = DeleteVertexResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_graph_v1_graph_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteVertexResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteVertexResponse) ProtoMessage() {}

func (x *DeleteVertexResponse) ProtoReflect() protoreflect.Message {
	mi := &file_graph_v1_graph_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteVertexResponse.ProtoReflect.Descriptor instead.
func (*DeleteVertexResponse) Descriptor() ([]byte, []int) {
	return file_graph_v1_graph_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteVertexResponse) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_STATUS_UNSPECIFIED
}

type GetEdgeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tail string `protobuf:"bytes,1,opt,name=tail,proto3" json:"tail,omitempty"`
	Head string `protobuf:"bytes,2,opt,name=head,proto3" json:"head,omitempty"`
}

func (x *GetEdgeRequest) Reset() {
	*x = GetEdgeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_graph_v1_graph_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEdgeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEdgeRequest) ProtoMessage() {}

func (x *GetEdgeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_graph_v1_graph_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEdgeRequest.ProtoReflect.Descriptor instead.
func (*GetEdgeRequest) Descriptor() ([]byte, []int) {
	return file_graph_v1_graph_proto_rawDescGZIP(), []int{11}
}

func (x *GetEdgeRequest) GetTail() string {
	if x != nil {
		return x.Tail
	}
	return ""
}

func (x *GetEdgeRequest) GetHead() string {
	if x != nil {
		return x.Head
	}
	return ""
}

type GetEdgeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Edge *Edge `protobuf:"bytes,1,opt,name=edge,proto3" json:"edge,omitempty"`
}

func (x *GetEdgeResponse) Reset() {
	*x = GetEdgeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_graph_v1_graph_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEdgeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEdgeResponse) ProtoMessage() {}

func (x *GetEdgeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_graph_v1_graph_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEdgeResponse.ProtoReflect.Descriptor instead.
func (*GetEdgeResponse) Descriptor() ([]byte, []int) {
	return file_graph_v1_graph_proto_rawDescGZIP(), []int{12}
}

func (x *GetEdgeResponse) GetEdge() *Edge {
	if x != nil {
		return x.Edge
	}
	return nil
}

type DeleteEdgeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tail string `protobuf:"bytes,1,opt,name=tail,proto3" json:"tail,omitempty"`
	Head string `protobuf:"bytes,2,opt,name=head,proto3" json:"head,omitempty"`
}

func (x *DeleteEdgeRequest) Reset() {
	*x = DeleteEdgeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_graph_v1_graph_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteEdgeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteEdgeRequest) ProtoMessage() {}

func (x *DeleteEdgeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_graph_v1_graph_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteEdgeRequest.ProtoReflect.Descriptor instead.
func (*DeleteEdgeRequest) Descriptor() ([]byte, []int) {
	return file_graph_v1_graph_proto_rawDescGZIP(), []int{13}
}

func (x *DeleteEdgeRequest) GetTail() string {
	if x != nil {
		return x.Tail
	}
	return ""
}

func (x *DeleteEdgeRequest) GetHead() string {
	if x != nil {
		return x.Head
	}
	return ""
}

type DeleteEdgeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status Status `protobuf:"varint,1,opt,name=status,proto3,enum=graph.v1.Status" json:"status,omitempty"`
}

func (x *DeleteEdgeResponse) Reset() {
	*x = DeleteEdgeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_graph_v1_graph_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteEdgeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteEdgeResponse) ProtoMessage() {}

func (x *DeleteEdgeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_graph_v1_graph_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteEdgeResponse.ProtoReflect.Descriptor instead.
func (*DeleteEdgeResponse) Descriptor() ([]byte, []int) {
	return file_graph_v1_graph_proto_rawDescGZIP(), []int{14}
}

func (x *DeleteEdgeResponse) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_STATUS_UNSPECIFIED
}

type AddEdgeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Edges []*Edge `protobuf:"bytes,1,rep,name=edges,proto3" json:"edges,omitempty"`
}

func (x *AddEdgeRequest) Reset() {
	*x = AddEdgeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_graph_v1_graph_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddEdgeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddEdgeRequest) ProtoMessage() {}

func (x *AddEdgeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_graph_v1_graph_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddEdgeRequest.ProtoReflect.Descriptor instead.
func (*AddEdgeRequest) Descriptor() ([]byte, []int) {
	return file_graph_v1_graph_proto_rawDescGZIP(), []int{15}
}

func (x *AddEdgeRequest) GetEdges() []*Edge {
	if x != nil {
		return x.Edges
	}
	return nil
}

type AddEdgeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status Status `protobuf:"varint,1,opt,name=status,proto3,enum=graph.v1.Status" json:"status,omitempty"`
}

func (x *AddEdgeResponse) Reset() {
	*x = AddEdgeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_graph_v1_graph_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddEdgeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddEdgeResponse) ProtoMessage() {}

func (x *AddEdgeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_graph_v1_graph_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddEdgeResponse.ProtoReflect.Descriptor instead.
func (*AddEdgeResponse) Descriptor() ([]byte, []int) {
	return file_graph_v1_graph_proto_rawDescGZIP(), []int{16}
}

func (x *AddEdgeResponse) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_STATUS_UNSPECIFIED
}

var File_graph_v1_graph_proto protoreflect.FileDescriptor

var file_graph_v1_graph_proto_rawDesc = []byte{
	0x0a, 0x14, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x72, 0x61, 0x70, 0x68,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x76, 0x31,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x93, 0x03, 0x0a, 0x06, 0x56, 0x65, 0x72, 0x74, 0x65, 0x78, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3a, 0x0a, 0x0a,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x07, 0x66, 0x6c, 0x6f, 0x61,
	0x74, 0x36, 0x34, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x48, 0x00, 0x52, 0x07, 0x66, 0x6c, 0x6f,
	0x61, 0x74, 0x36, 0x34, 0x12, 0x1a, 0x0a, 0x07, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x32, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x02, 0x48, 0x00, 0x52, 0x07, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x32,
	0x12, 0x16, 0x0a, 0x05, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x48,
	0x00, 0x52, 0x05, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x16, 0x0a, 0x05, 0x69, 0x6e, 0x74, 0x36,
	0x34, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x05, 0x69, 0x6e, 0x74, 0x36, 0x34,
	0x12, 0x18, 0x0a, 0x06, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d,
	0x48, 0x00, 0x52, 0x06, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x18, 0x0a, 0x06, 0x75, 0x69,
	0x6e, 0x74, 0x36, 0x34, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x06, 0x75, 0x69,
	0x6e, 0x74, 0x36, 0x34, 0x12, 0x14, 0x0a, 0x04, 0x62, 0x6f, 0x6f, 0x6c, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x08, 0x48, 0x00, 0x52, 0x04, 0x62, 0x6f, 0x6f, 0x6c, 0x12, 0x18, 0x0a, 0x06, 0x73, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x73, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x0a, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x12, 0x3a, 0x0a, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x00, 0x52, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x12, 0x0a, 0x03, 0x6e, 0x69, 0x6c, 0x18,
	0x1e, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x03, 0x6e, 0x69, 0x6c, 0x42, 0x07, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x82, 0x01, 0x0a, 0x04, 0x45, 0x64, 0x67, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61,
	0x69, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x65, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x68, 0x65, 0x61, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x3a,
	0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x5b, 0x0a, 0x05, 0x47, 0x72,
	0x61, 0x70, 0x68, 0x12, 0x2c, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x74, 0x69, 0x63, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x76, 0x31,
	0x2e, 0x56, 0x65, 0x72, 0x74, 0x65, 0x78, 0x52, 0x08, 0x76, 0x65, 0x72, 0x74, 0x69, 0x63, 0x65,
	0x73, 0x12, 0x24, 0x0a, 0x05, 0x65, 0x64, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x64, 0x67, 0x65,
	0x52, 0x05, 0x65, 0x64, 0x67, 0x65, 0x73, 0x22, 0x9b, 0x01, 0x0a, 0x11, 0x49, 0x6c, 0x6c, 0x75,
	0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x65, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x65, 0x65,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x65, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x73, 0x74, 0x65, 0x70, 0x12, 0x0c, 0x0a, 0x01, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x01, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x66, 0x69, 0x64, 0x66, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x05, 0x74, 0x66, 0x69, 0x64, 0x66, 0x12, 0x3a, 0x0a, 0x0c, 0x6f, 0x70, 0x74,
	0x69, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x16, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6d,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x65, 0x0a, 0x12, 0x49, 0x6c, 0x6c, 0x75, 0x6d, 0x69, 0x6e,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x05, 0x67,
	0x72, 0x61, 0x70, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x72, 0x61,
	0x70, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x61, 0x70, 0x68, 0x52, 0x05, 0x67, 0x72, 0x61,
	0x70, 0x68, 0x12, 0x28, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x10, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x24, 0x0a, 0x10,
	0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x74, 0x65, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x22, 0x3d, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x74, 0x65, 0x78, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x06, 0x76, 0x65, 0x72, 0x74, 0x65,
	0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e,
	0x76, 0x31, 0x2e, 0x56, 0x65, 0x72, 0x74, 0x65, 0x78, 0x52, 0x06, 0x76, 0x65, 0x72, 0x74, 0x65,
	0x78, 0x22, 0x40, 0x0a, 0x10, 0x50, 0x75, 0x74, 0x56, 0x65, 0x72, 0x74, 0x65, 0x78, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x74, 0x69, 0x63, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e,
	0x76, 0x31, 0x2e, 0x56, 0x65, 0x72, 0x74, 0x65, 0x78, 0x52, 0x08, 0x76, 0x65, 0x72, 0x74, 0x69,
	0x63, 0x65, 0x73, 0x22, 0x3d, 0x0a, 0x11, 0x50, 0x75, 0x74, 0x56, 0x65, 0x72, 0x74, 0x65, 0x78,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x27, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x65, 0x72, 0x74,
	0x65, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x40, 0x0a, 0x14, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x65, 0x72, 0x74, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x38, 0x0a,
	0x0e, 0x47, 0x65, 0x74, 0x45, 0x64, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x61, 0x69, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x65, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x68, 0x65, 0x61, 0x64, 0x22, 0x35, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x45, 0x64,
	0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x04, 0x65, 0x64,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68,
	0x2e, 0x76, 0x31, 0x2e, 0x45, 0x64, 0x67, 0x65, 0x52, 0x04, 0x65, 0x64, 0x67, 0x65, 0x22, 0x3b,
	0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x64, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x65, 0x61, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x65, 0x61, 0x64, 0x22, 0x3e, 0x0a, 0x12, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x64, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x28, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x10, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x36, 0x0a, 0x0e, 0x41,
	0x64, 0x64, 0x45, 0x64, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a,
	0x05, 0x65, 0x64, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x67,
	0x72, 0x61, 0x70, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x64, 0x67, 0x65, 0x52, 0x05, 0x65, 0x64,
	0x67, 0x65, 0x73, 0x22, 0x3b, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x45, 0x64, 0x67, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x2a, 0xce, 0x01, 0x0a, 0x0c, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1c, 0x0a, 0x18, 0x4f, 0x50, 0x54, 0x49, 0x4d, 0x49, 0x5a, 0x41, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x26, 0x0a, 0x22, 0x4f, 0x50, 0x54, 0x49, 0x4d, 0x49, 0x5a, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x4d, 0x49, 0x4e, 0x49, 0x4d, 0x55, 0x4d, 0x5f, 0x53, 0x50, 0x41, 0x4e, 0x4e, 0x49, 0x4e, 0x47,
	0x5f, 0x54, 0x52, 0x45, 0x45, 0x10, 0x01, 0x12, 0x26, 0x0a, 0x22, 0x4f, 0x50, 0x54, 0x49, 0x4d,
	0x49, 0x5a, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4d, 0x41, 0x58, 0x49, 0x4d, 0x55, 0x4d, 0x5f,
	0x53, 0x50, 0x41, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x5f, 0x54, 0x52, 0x45, 0x45, 0x10, 0x02, 0x12,
	0x23, 0x0a, 0x1f, 0x4f, 0x50, 0x54, 0x49, 0x4d, 0x49, 0x5a, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x53, 0x48, 0x4f, 0x52, 0x54, 0x45, 0x53, 0x54, 0x5f, 0x50, 0x41, 0x54, 0x48, 0x5f, 0x54, 0x52,
	0x45, 0x45, 0x10, 0x03, 0x12, 0x2b, 0x0a, 0x27, 0x4f, 0x50, 0x54, 0x49, 0x4d, 0x49, 0x5a, 0x41,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x48, 0x4f, 0x52, 0x54, 0x45, 0x53, 0x54, 0x5f, 0x50, 0x41,
	0x54, 0x48, 0x5f, 0x54, 0x52, 0x45, 0x45, 0x5f, 0x49, 0x4e, 0x56, 0x45, 0x52, 0x53, 0x45, 0x10,
	0x04, 0x2a, 0x6d, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x12, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4f, 0x4b,
	0x10, 0x01, 0x12, 0x20, 0x0a, 0x1c, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x49, 0x4e, 0x54,
	0x45, 0x52, 0x4e, 0x41, 0x4c, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x45, 0x52, 0x5f, 0x45, 0x52, 0x52,
	0x4f, 0x52, 0x10, 0x02, 0x12, 0x1a, 0x0a, 0x16, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x49,
	0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x03,
	0x32, 0xc5, 0x05, 0x0a, 0x0e, 0x4c, 0x61, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x66, 0x0a, 0x0a, 0x49, 0x6c, 0x6c, 0x75, 0x6d, 0x69, 0x6e, 0x61, 0x74,
	0x65, 0x12, 0x1b, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6c, 0x6c,
	0x75, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c,
	0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6c, 0x6c, 0x75, 0x6d, 0x69,
	0x6e, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1d, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x17, 0x12, 0x15, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6c, 0x6c, 0x75, 0x6d, 0x69,
	0x6e, 0x61, 0x74, 0x65, 0x2f, 0x7b, 0x73, 0x65, 0x65, 0x64, 0x7d, 0x12, 0x60, 0x0a, 0x09, 0x47,
	0x65, 0x74, 0x56, 0x65, 0x72, 0x74, 0x65, 0x78, 0x12, 0x1a, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x74, 0x65, 0x78, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x74, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x12, 0x12, 0x2f, 0x76, 0x31, 0x2f, 0x76,
	0x65, 0x72, 0x74, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x7b, 0x6b, 0x65, 0x79, 0x7d, 0x12, 0x5d, 0x0a,
	0x09, 0x50, 0x75, 0x74, 0x56, 0x65, 0x72, 0x74, 0x65, 0x78, 0x12, 0x1a, 0x2e, 0x67, 0x72, 0x61,
	0x70, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x74, 0x56, 0x65, 0x72, 0x74, 0x65, 0x78, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x75, 0x74, 0x56, 0x65, 0x72, 0x74, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x17, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x3a, 0x01, 0x2a, 0x1a, 0x0c,
	0x2f, 0x76, 0x31, 0x2f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x63, 0x65, 0x73, 0x12, 0x69, 0x0a, 0x0c,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x65, 0x72, 0x74, 0x65, 0x78, 0x12, 0x1d, 0x2e, 0x67,
	0x72, 0x61, 0x70, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x65,
	0x72, 0x74, 0x65, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x67, 0x72,
	0x61, 0x70, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x65, 0x72,
	0x74, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1a, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x14, 0x2a, 0x12, 0x2f, 0x76, 0x31, 0x2f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x63, 0x65,
	0x73, 0x2f, 0x7b, 0x6b, 0x65, 0x79, 0x7d, 0x12, 0x5f, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x45, 0x64,
	0x67, 0x65, 0x12, 0x18, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x45, 0x64, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x67,
	0x72, 0x61, 0x70, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x64, 0x67, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x12,
	0x17, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x64, 0x67, 0x65, 0x73, 0x2f, 0x7b, 0x74, 0x61, 0x69, 0x6c,
	0x7d, 0x2f, 0x7b, 0x68, 0x65, 0x61, 0x64, 0x7d, 0x12, 0x54, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x45,
	0x64, 0x67, 0x65, 0x12, 0x18, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x64, 0x64, 0x45, 0x64, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e,
	0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x45, 0x64, 0x67, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x14, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0e,
	0x3a, 0x01, 0x2a, 0x1a, 0x09, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x64, 0x67, 0x65, 0x73, 0x12, 0x68,
	0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x64, 0x67, 0x65, 0x12, 0x1b, 0x2e, 0x67,
	0x72, 0x61, 0x70, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x64,
	0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x67, 0x72, 0x61, 0x70,
	0x68, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x64, 0x67, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x2a,
	0x17, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x64, 0x67, 0x65, 0x73, 0x2f, 0x7b, 0x74, 0x61, 0x69, 0x6c,
	0x7d, 0x2f, 0x7b, 0x68, 0x65, 0x61, 0x64, 0x7d, 0x42, 0x26, 0x5a, 0x24, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x61, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x2d, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x2f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2f, 0x76, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_graph_v1_graph_proto_rawDescOnce sync.Once
	file_graph_v1_graph_proto_rawDescData = file_graph_v1_graph_proto_rawDesc
)

func file_graph_v1_graph_proto_rawDescGZIP() []byte {
	file_graph_v1_graph_proto_rawDescOnce.Do(func() {
		file_graph_v1_graph_proto_rawDescData = protoimpl.X.CompressGZIP(file_graph_v1_graph_proto_rawDescData)
	})
	return file_graph_v1_graph_proto_rawDescData
}

var file_graph_v1_graph_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_graph_v1_graph_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_graph_v1_graph_proto_goTypes = []interface{}{
	(Optimization)(0),             // 0: graph.v1.Optimization
	(Status)(0),                   // 1: graph.v1.Status
	(*Vertex)(nil),                // 2: graph.v1.Vertex
	(*Edge)(nil),                  // 3: graph.v1.Edge
	(*Graph)(nil),                 // 4: graph.v1.Graph
	(*IlluminateRequest)(nil),     // 5: graph.v1.IlluminateRequest
	(*IlluminateResponse)(nil),    // 6: graph.v1.IlluminateResponse
	(*GetVertexRequest)(nil),      // 7: graph.v1.GetVertexRequest
	(*GetVertexResponse)(nil),     // 8: graph.v1.GetVertexResponse
	(*PutVertexRequest)(nil),      // 9: graph.v1.PutVertexRequest
	(*PutVertexResponse)(nil),     // 10: graph.v1.PutVertexResponse
	(*DeleteVertexRequest)(nil),   // 11: graph.v1.DeleteVertexRequest
	(*DeleteVertexResponse)(nil),  // 12: graph.v1.DeleteVertexResponse
	(*GetEdgeRequest)(nil),        // 13: graph.v1.GetEdgeRequest
	(*GetEdgeResponse)(nil),       // 14: graph.v1.GetEdgeResponse
	(*DeleteEdgeRequest)(nil),     // 15: graph.v1.DeleteEdgeRequest
	(*DeleteEdgeResponse)(nil),    // 16: graph.v1.DeleteEdgeResponse
	(*AddEdgeRequest)(nil),        // 17: graph.v1.AddEdgeRequest
	(*AddEdgeResponse)(nil),       // 18: graph.v1.AddEdgeResponse
	(*timestamppb.Timestamp)(nil), // 19: google.protobuf.Timestamp
}
var file_graph_v1_graph_proto_depIdxs = []int32{
	19, // 0: graph.v1.Vertex.expiration:type_name -> google.protobuf.Timestamp
	19, // 1: graph.v1.Vertex.timestamp:type_name -> google.protobuf.Timestamp
	19, // 2: graph.v1.Edge.expiration:type_name -> google.protobuf.Timestamp
	2,  // 3: graph.v1.Graph.vertices:type_name -> graph.v1.Vertex
	3,  // 4: graph.v1.Graph.edges:type_name -> graph.v1.Edge
	0,  // 5: graph.v1.IlluminateRequest.optimization:type_name -> graph.v1.Optimization
	4,  // 6: graph.v1.IlluminateResponse.graph:type_name -> graph.v1.Graph
	1,  // 7: graph.v1.IlluminateResponse.status:type_name -> graph.v1.Status
	2,  // 8: graph.v1.GetVertexResponse.vertex:type_name -> graph.v1.Vertex
	2,  // 9: graph.v1.PutVertexRequest.vertices:type_name -> graph.v1.Vertex
	1,  // 10: graph.v1.PutVertexResponse.status:type_name -> graph.v1.Status
	1,  // 11: graph.v1.DeleteVertexResponse.status:type_name -> graph.v1.Status
	3,  // 12: graph.v1.GetEdgeResponse.edge:type_name -> graph.v1.Edge
	1,  // 13: graph.v1.DeleteEdgeResponse.status:type_name -> graph.v1.Status
	3,  // 14: graph.v1.AddEdgeRequest.edges:type_name -> graph.v1.Edge
	1,  // 15: graph.v1.AddEdgeResponse.status:type_name -> graph.v1.Status
	5,  // 16: graph.v1.LanternService.Illuminate:input_type -> graph.v1.IlluminateRequest
	7,  // 17: graph.v1.LanternService.GetVertex:input_type -> graph.v1.GetVertexRequest
	9,  // 18: graph.v1.LanternService.PutVertex:input_type -> graph.v1.PutVertexRequest
	11, // 19: graph.v1.LanternService.DeleteVertex:input_type -> graph.v1.DeleteVertexRequest
	13, // 20: graph.v1.LanternService.GetEdge:input_type -> graph.v1.GetEdgeRequest
	17, // 21: graph.v1.LanternService.AddEdge:input_type -> graph.v1.AddEdgeRequest
	15, // 22: graph.v1.LanternService.DeleteEdge:input_type -> graph.v1.DeleteEdgeRequest
	6,  // 23: graph.v1.LanternService.Illuminate:output_type -> graph.v1.IlluminateResponse
	8,  // 24: graph.v1.LanternService.GetVertex:output_type -> graph.v1.GetVertexResponse
	10, // 25: graph.v1.LanternService.PutVertex:output_type -> graph.v1.PutVertexResponse
	12, // 26: graph.v1.LanternService.DeleteVertex:output_type -> graph.v1.DeleteVertexResponse
	14, // 27: graph.v1.LanternService.GetEdge:output_type -> graph.v1.GetEdgeResponse
	18, // 28: graph.v1.LanternService.AddEdge:output_type -> graph.v1.AddEdgeResponse
	16, // 29: graph.v1.LanternService.DeleteEdge:output_type -> graph.v1.DeleteEdgeResponse
	23, // [23:30] is the sub-list for method output_type
	16, // [16:23] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_graph_v1_graph_proto_init() }
func file_graph_v1_graph_proto_init() {
	if File_graph_v1_graph_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_graph_v1_graph_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vertex); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_graph_v1_graph_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Edge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_graph_v1_graph_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Graph); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_graph_v1_graph_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IlluminateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_graph_v1_graph_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IlluminateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_graph_v1_graph_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVertexRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_graph_v1_graph_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVertexResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_graph_v1_graph_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutVertexRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_graph_v1_graph_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutVertexResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_graph_v1_graph_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteVertexRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_graph_v1_graph_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteVertexResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_graph_v1_graph_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEdgeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_graph_v1_graph_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEdgeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_graph_v1_graph_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteEdgeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_graph_v1_graph_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteEdgeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_graph_v1_graph_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddEdgeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_graph_v1_graph_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddEdgeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_graph_v1_graph_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Vertex_Float64)(nil),
		(*Vertex_Float32)(nil),
		(*Vertex_Int32)(nil),
		(*Vertex_Int64)(nil),
		(*Vertex_Uint32)(nil),
		(*Vertex_Uint64)(nil),
		(*Vertex_Bool)(nil),
		(*Vertex_String_)(nil),
		(*Vertex_Bytes)(nil),
		(*Vertex_Timestamp)(nil),
		(*Vertex_Nil)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_graph_v1_graph_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_graph_v1_graph_proto_goTypes,
		DependencyIndexes: file_graph_v1_graph_proto_depIdxs,
		EnumInfos:         file_graph_v1_graph_proto_enumTypes,
		MessageInfos:      file_graph_v1_graph_proto_msgTypes,
	}.Build()
	File_graph_v1_graph_proto = out.File
	file_graph_v1_graph_proto_rawDesc = nil
	file_graph_v1_graph_proto_goTypes = nil
	file_graph_v1_graph_proto_depIdxs = nil
}
